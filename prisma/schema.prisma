// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String         @id @default(uuid())
  email                  String         @unique
  firstname              String
  lastname               String
  password               String
  account_verify_token   String?
  account_verify_expires DateTime?
  email_verified_at      DateTime?
  created_at             DateTime       @default(now())
  updated_at             DateTime       @updatedAt
  budget                 Budget[]
  subscriptions          Subscription[]
  account                Account[]
  income                 Income[]
  Expense                Expense[]
}

model Account {
  id         String   @id @default(uuid())
  name       String
  User       User     @relation(fields: [userId], references: [id])
  userId     String
  balance    Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Income     Income[]

  @@index([userId])
}

model Income {
  id         String   @id @default(uuid())
  source     String
  amount     Float
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
  account    Account  @relation(fields: [accountId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  accountId  String
}

model Budget {
  id         String   @id @default(uuid())
  name       String
  type       Range
  amount     Float
  userId     String
  startTime  DateTime
  endTime    DateTime
  user       User     @relation(fields: [userId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([userId])
}

enum Range {
  Daily
  Weekly
  Monthly
  Quarterly
  Yearly
}

model Expense {
  id       String          @id @default(uuid())
  name     String
  amount   Float
  category ExpenseCategory
  userId   String
  user     User            @relation(fields: [userId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([userId])
}

enum ExpenseCategory {
  Food
  Rent
  Transportation
  Subscription
  Gift
  Health
}

model Subscription {
  id     String @id @default(uuid())
  name   String
  amount Float

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}
