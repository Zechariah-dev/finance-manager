# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Account {
  balance: Float!
  created_at: DateTime!
  currency: String!
  id: String!
  name: String!
  updated_at: DateTime!
  userId: String!
}

input CreateAccountInput {
  balance: Float!
  currency: String!
  name: String!
}

input CreateExpenseInput {
  accountId: String!
  amount: Float!
  category: String!
  description: String
}

input CreateIncomeInput {
  accountId: String!
  amount: Float!

  """income source"""
  source: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Expense {
  amount: Float!
  category: String!
  created_at: DateTime!
  description: String
  id: String!
  updated_at: DateTime!
  userId: String!
}

input FindExpensesInput {
  accountId: String
  category: String!
  limit: Int! = 10
  page: Int! = 1
}

type FindExpensesResponse {
  data: [Expense!]!
  limit: Int!
  page: Int!
  totalCount: Int!
}

input FindIncomesInput {
  accountId: String
  limit: Int! = 10
  page: Int! = 1
  source: String
}

type FindIncomesResponse {
  data: [Income!]!
  limit: Int!
  page: Int!
  totalCount: Int!
}

input ForgotPassword {
  email: String!
}

type Income {
  accountId: String!
  amount: Float!
  created_at: DateTime!
  id: String!
  source: String!
  updated_at: DateTime!
  userId: String!
}

input LoginInput {
  email: String!
  password: String!
  remember_me: Boolean!
}

type LoginResponse {
  tokens: TokensType!
  user: User!
}

type MessageResponse {
  message: String!
}

type Mutation {
  createAccount(createAccountInput: CreateAccountInput!): Account!
  createExpense(createExpenseInput: CreateExpenseInput!): Expense!
  createIncome(createIncomeInput: CreateIncomeInput!): Income!
  deleteAccount(id: String!): Boolean!
  login(loginInput: LoginInput!): LoginResponse!
  register(registerInput: RegisterInput!): User!
  updateAccount(updateAccountInput: UpdateAccountInput!): Account!
}

type Query {
  findIncome(id: String!): Income!
  findIncomes(findIncomesInput: FindIncomesInput!): FindIncomesResponse!
  findOne(id: String!): Expense!
  findUserAccount(id: String!): Account!
  findUserAccounts: [Account!]!
  findUserExpenses(findExpensesInput: FindExpensesInput!): FindExpensesResponse!
  forgotPassword(forgotPassword: ForgotPassword!): MessageResponse!
  resetPassword(resetPasswordInput: ResetPasswordInput!): MessageResponse!
}

input RegisterInput {
  email: String!
  firstname: String!
  lastname: String!
  password: String!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

type TokensType {
  access_token: String!
  refresh_token: String!
}

input UpdateAccountInput {
  accountId: String!
  balance: Float!
  name: String
}

type User {
  created_at: DateTime!
  email: String!
  firstname: String!
  id: String!
  lastname: String!
  updated_at: DateTime!
}